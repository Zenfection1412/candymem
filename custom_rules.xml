<project name="candymem" default="help">
  <property name="proj" value="candymem" />
  <property name="apkplz" value="candymem-release.apk" />
  <property name="site" location="../tube42.github.io/candymem" />

  <target name="setup">
    <mkdir dir="libs" />
    <mkdir dir="libs/dl" />
    <mkdir dir="libs/pc" />
    <mkdir dir="libs/bin" />
    
    <!-- unpack assets right into the project -->    
    <get skipexisting="false" src="http://tube42.github.io/${proj}/assets/assets.zip" dest="libs/dl/assets.zip" />        
    <unzip src="libs/dl/assets.zip" dest="./"/>
    
    <!-- download needed files -->    
    <get skipexisting="false" src="http://tube42.github.io/marm/bin/marm_app.jar" dest="libs/bin/marm_app.jar" />    
    <get skipexisting="false" src="http://tube42.github.io/ks/bin/Kickstarter_lib.jar" dest="libs/Kickstarter_lib.jar" />
    <get skipexisting="false" src="http://tube42.github.io/tweeny/bin/Tweeny_lib.jar" dest="libs/Tweeny_lib.jar" />
    <get skipexisting="true" src="http://libgdx.badlogicgames.com/releases/libgdx-1.5.0.zip" dest="libs/dl/gdx.zip" />
    
	
    <!-- unpack gdx -->
    <unzip src="libs/dl/gdx.zip" dest="libs/tmp"/>

    <unjar src="libs/tmp/gdx.jar" dest="libs/common" />
    <unjar src="libs/tmp/extensions/gdx-freetype/gdx-freetype.jar" dest="libs/common" />

    <!-- bin -->
    <copy file="libs/tmp//extensions/gdx-tools/gdx-tools.jar" todir="libs/bin" />
    <echo file="libs/bin/hiero" >#!/bin/sh
      java -cp libs/pc/libgdx_desktop.jar:libs/bin/gdx-tools.jar com.badlogic.gdx.tools.hiero.Hiero $*
    </echo>
    <chmod file="libs/bin/hiero" perm="+x"/>
   
   
    <!-- desktop -->
    <unjar src="libs/tmp/gdx-backend-lwjgl-natives.jar" dest="libs/desktop" />
    <unjar src="libs/tmp/gdx-backend-lwjgl.jar" dest="libs/desktop" />
    <unjar src="libs/tmp/gdx-natives.jar" dest="libs/desktop" />
    <unjar src="libs/tmp/extensions/gdx-freetype/gdx-freetype-natives.jar" dest="libs/desktop" />


    <!-- android -->
    <unjar src="libs/tmp/gdx-backend-android.jar" dest="libs/android/" />
    <copydir src="libs/tmp/armeabi/" dest="libs/android/lib/armeabi" />
    <copydir src="libs/tmp/armeabi-v7a/" dest="libs/android/lib/armeabi-v7a" />
    <copydir src="libs/tmp/x86" dest="libs/android/lib/x86" />

    <copydir src="libs/tmp/extensions/gdx-freetype/armeabi" dest="libs/android/lib/armeabi" />
    <copydir src="libs/tmp/extensions/gdx-freetype/armeabi-v7a" dest="libs/android/lib/armeabi-v7a" />
    <copydir src="libs/tmp/extensions/gdx-freetype/x86" dest="libs/android/lib/x86" />

    <!-- create jars -->
    <jar jarfile="libs/pc/libgdx_desktop.jar">
      <fileset dir="libs/common" />
      <fileset dir="libs/desktop" />
    </jar>

    <jar jarfile="libs/libgdx_android.jar" >
      <fileset dir="libs/common" />
      <fileset dir="libs/android"/>
    </jar>

    <delete dir="libs/android"/>
    <delete dir="libs/desktop"/>
    <delete dir="libs/common"/>
    <delete dir="libs/tmp"/>

  </target>


  <!-- for desktop -->
  <path id="cp">
    <fileset dir="libs">
      <include name="Tweeny_lib.jar"/>
      <include name="Kickstarter_lib.jar"/>
    </fileset>

    <fileset dir="libs/pc">
      <include name="libgdx_desktop.jar"/>
    </fileset>

    <pathelement path="build/"/>
  </path>


  <target name="init_local">
    <tstamp/>
    <mkdir dir="build"/>
  </target>

  <target name="compile_local" depends="init_local" >
    <javac includeantruntime="false" destdir="build">
      <src path="src" />
      <exclude name="se/tube42/*/android/**" />
      <classpath refid="cp" />
    </javac>
  </target>

  <target name="run" depends="compile_local" >
    <java dir="assets" classname="se.tube42.kidsmem.desktop.DesktopMain" fork="yes">
      <classpath refid="cp" />
    </java>
  </target>
  
  
  <target name="publish" depends="release" >
    <!-- the comiled assets -->
    <zip destfile="${site}/assets/assets.zip" >
      <zipfileset dir="assets/1" prefix="assets/1"/>  
      <zipfileset dir="res" prefix="res" />
    </zip>    
    
    <!-- the APK -->
    <copy file="bin/${apkplz}" todir="${site}/bin"/>
    
    <!-- add them to git, commit them and finally push the repo-->
    <exec executable="git" dir="${site}">
      <arg line="add bin/${apkplz} assets/assets.zip"/>
    </exec>
    <exec executable="git" dir="${site}">
      <arg line="commit . -m 'published ${apkplz} and assets from custom_rules.xml'"/>
    </exec>
    <exec executable="git" dir="${site}">
      <arg line="push"/>
    </exec>
  </target>

  <target name="clean2"  depends="clean" description="clean up" >
    <delete dir="build"/>
    <delete dir="libs"/>
    <delete dir="bin"/>
  </target>
</project>
